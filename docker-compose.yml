version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: datamap-staging-app
    command: uvicorn main:app --host 0.0.0.0 --port 9000
    volumes:
      - .:/app
    ports:
      - "9001:9000"
    depends_on:
      - rabbitmqservice
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmqservice:5672//
      - CELERY_RESULT_BACKEND=rpc://
      - PYTHONPATH=/app  # Make sure Python looks at /app for modules

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery-flower
    command: celery -A celery_jobs.celery_tasks flower --port=5555
    ports:
      - "5557:5555"
    depends_on:
      - rabbitmqservice


  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile  # Use the same image as app service
    container_name: celery_worker
    command: celery -A celery_jobs.celery_tasks worker --loglevel=info --pool=solo
#    command: ["./wait-for-it.sh", "rabbitmqservice:5772", "--", "celery", "-A", "celery_jobs.celery_tasks", "worker", "--loglevel=info", "--pool=solo"]
    volumes:
      - .:/app  # Mount your local code to /app in the container
    depends_on:
      - rabbitmqservice
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmqservice:5672//
      - CELERY_RESULT_BACKEND=rpc://

  rabbitmqservice:
    image: rabbitmq:3-management
    container_name: rabbitmqservice
    ports:
      - "5772:5672"
      - "15772:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

